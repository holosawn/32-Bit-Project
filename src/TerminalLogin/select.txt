hypertext olarak altına div koycan
isopen a göre butonlar gözükücek
menu açıkken butonlara tıklayabilmenin yolunu bulcan
sx proplarını düzenlicen



import { useFormikContext, useField } from "formik"
import { MenuItem,Box,Select} from '@mui/material'
import { useEffect, useState } from "react"
import {IconButton} from "@mui/material"
import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';

const CustomSelect = ({name,options,style,otherProps}) => {
    
    const { setFieldValue } = useFormikContext();
    const [field, meta] = useField(name);
    const [isOpen,setIsOpen] = useState(false)

    const handleChange = evt => {
      const { value } = evt.target;
      setFieldValue(name, value);
    };

    useEffect(()=>{
        setFieldValue(name,options[0])
    },[])


    const configSelect = {
      ...field,
      ...otherProps,
      size : "small",
      variant: 'outlined',
      color:(meta.touched && meta.error ? "primary" : "third"),
      defaultValue: options[0],
      onChange: handleChange
    };
  
    if (meta && meta.touched && meta.error) {
      configSelect.error = true;
    }
    
    console.log(isOpen)
    return (
      <>
        <Box>

          <Select defaultValue={options[0]} sx={{...style}} {...configSelect}
            open={isOpen} onOpen={() => setIsOpen(true)} onClose={() => setIsOpen(false)}
            >
          {options.map(val => {
          return <MenuItem value = {val} >{val}</MenuItem>
          })}
          
          </Select>

        </Box>

  {isOpen && <IconButton
      sx={{}}
      onClick={() => {
        const menuList = document.querySelector(".MuiMenu-paper");
        if (menuList) {
          menuList.scrollTop -= 100;
        }
      }}
    >
      <KeyboardArrowUpIcon />
    </IconButton>}


   {isOpen && <IconButton
      sx={{}}
      onClick={() => {
        const menuList = document.querySelector(".MuiMenu-paper");
        if (menuList) {
          menuList.scrollTop += 100;
        }
      }}
    >
      <KeyboardArrowDownIcon />
    </IconButton>}
      </>
    )
  }
export default CustomSelect